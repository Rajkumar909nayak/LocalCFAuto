name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest # Switch to a Linux runner (ubuntu-latest)

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'

      # Cache node_modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-v1-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-v1-

      - name: Install dependencies
        run: npm install

      # Cache Playwright dependencies
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers and dependencies
        run: npx playwright install --with-deps

      - name: Install Xvfb (Virtual display server)
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Set up Xvfb and run tests in headed mode
        run: |
          # Start Xvfb on display :99 in the background
          Xvfb :99 -ac & 
          export DISPLAY=:99
          # Run Playwright tests in headed mode
          npm run test:serial --npm_config_ENV=stage --headed
        env:
          npm_config_ENV: stage

      - name: Upload HTML reports
        uses: actions/upload-artifact@v3
        with:
          name: html-reports
          path: html-report/
        if: always()
